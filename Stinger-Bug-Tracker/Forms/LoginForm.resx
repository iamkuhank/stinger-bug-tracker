<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>