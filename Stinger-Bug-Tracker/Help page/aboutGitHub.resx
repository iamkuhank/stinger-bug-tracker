<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>